
enum TaskStatus {
  New
  Accepted
  Rejected
  Progress
  Paused
  Done
  Discuss
  Approved
  RevisionsRequired
  Completed
}


"""
Проект не обязательный, чтобы не было необходимости указывать для 
дочернего задания проект.
Отмена. Такой подход затруднит получение данных о задачах на различном уровне вложенности
"""

type Task {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  description: String
  content: Json
  status: TaskStatus! @default(value: New)
  
  # Project: Project! @relation(name: "ProjectTasks")
  # Projects: [Project!]! @relation(name: "ProjectsTasks")
  TaskProjects: [ProjectTask!]! @relation(name: "ProjectTaskTask" onDelete: CASCADE)

  CreatedBy: User @relation(name: "UserCreatedTasks")
  Members: [TaskMember!]! @relation(name: "TaskMemberTask")
  Parent: Task @relation(name: "Tasks")
  Childs: [Task!]! @relation(name: "Tasks")

  """Задача, от короторой зависит текущая задача (может быть из других проектов)"""
  RelatedFrom: [Task!]! @relation(name: "RelatedTasks")
  """Задачи, зависящие от текущей задачи"""
  RelatedTo: [Task!]! @relation(name: "RelatedTasks")

  startDatePlaning: DateTime
  endDatePlaning: DateTime
  startDate: DateTime
  endDate: DateTime

  Timers: [Timer!]! @relation(name: "TaskTimers")
  Reactions: [TaskReaction!]!
  
  ChatRoom: ChatRoom @relation(name: "TaskChatRoom" link: INLINE)
}
